append-path ()
{
  if [ -d "$1" ]; then
      PATH="$PATH:$1"
  fi
}
append-path "$HOME/.cabal/bin"
append-path "$HOME/.cargo/bin"
append-path "$HOME/opt/bin"
append-path "$HOME/bin"
append-path "$HOME/go/bin"
append-path "$HOME/.dotnet/tools"
append-path "$HOME/.emacs.d/bin"
append-path "$HOME/.local/bin"
append-path "$HOME/thirdparty/phantomjs/bin"

if [ $(id -u) -ne 0 ]; then
   if [ ! "$(ps aux | grep emacs | grep -v grep)" ]; then
      emacs -nw --daemon=smalltask &> /dev/null &
   fi
fi

export EDITOR="emacsclient -socket-name=\"smalltask\" -nw "
alias edit="$EDITOR"
# The following up until the next "End" was provided by ArcoLinux and thus I did nothing but edit it slightly. -- #

# Path to your oh-my-zsh installation.
#installation via script from github
#export ZSH="/home/$USER/.oh-my-zsh"
#installation via paru -S oh-my-zsh-git
export ZSH=/usr/share/oh-my-zsh/
# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

plugins=(git)

source $ZSH/oh-my-zsh.sh

source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

setopt GLOB_DOTS
#share commands between terminal instances or not
#unsetopt SHARE_HISTORY
setopt SHARE_HISTORY

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

export HISTCONTROL=ignoreboth:erasedups

## Colorize the grep command output for ease of use (good for log files)##
alias grep='grep --color=auto'

#continue download
alias wget="wget -c"

#ps
alias psgrep="ps aux | grep -v grep | grep -i -e VSZ -e"

#grub update
alias update-grub="sudo grub-mkconfig -o /boot/grub/grub.cfg"

#add new fonts
alias update-fc='sudo fc-cache -fv'

#youtube download
alias yta-aac="yt-dlp --extract-audio --audio-format aac "
alias yta-best="yt-dlp --extract-audio --audio-format best "
alias yta-flac="yt-dlp --extract-audio --audio-format flac "
alias yta-mp3="yt-dlp --extract-audio --audio-format mp3 "
alias ytv-best="yt-dlp -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/bestvideo+bestaudio' --merge-output-format mp4 "

#Cleanup orphaned packages
alias cleanup='sudo pacman -Rns $(pacman -Qtdq)'

#search content with ripgrep
alias rg="rg --sort path"

# # ex = EXtractor for all kinds of archives
# # usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1   ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *.deb)       ar x $1      ;;
      *.tar.xz)    tar xf $1    ;;
      *.tar.zst)   tar xf $1    ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}
# -- End -- #

# -- The following was taken from https://salferrarello.com/zsh-git-status-prompt/ -- #
autoload -Uz add-zsh-hook vcs_info
setopt prompt_subst
add-zsh-hook precmd vcs_info

# This is my own
PS1="%{$fg_bold[green]%}%n%{$reset_color%}@%m %{$fg_bold[green]%}%d%{$reset_color%} ${vcs_info_msg_0_}> "

zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:*' unstagedstr ' *'
zstyle ':vcs_info:*' stagedstr ' +'
zstyle ':vcs_info:git:*' formats       '(%b%u%c)'
zstyle ':vcs_info:git:*' actionformats '(%b|%a%u%c)'
# -- End -- #
#
alias ls="exa --long --all --git "
alias c="clear "

mkcd ()
{
  mkdir $1 && cd $1
}

twitch-vod()
{
  streamlink --stream-segment-threads 3 -p=mpv --player-no-close "$1" best
}

echo "" # Have some space at the top

# https://github.com/catppuccin/fzf#usage
export FZF_DEFAULT_OPTS='--color=bg+:#302D41,bg:#1E1E2E,spinner:#F8BD96,hl:#F28FAD --color=fg:#D9E0EE,header:#F28FAD,info:#DDB6F2,pointer:#F8BD96 --color=marker:#F8BD96,fg+:#F2CDCD,prompt:#DDB6F2,hl+:#F28FAD'

# eval "$(~/.config/base16-shell/profile_helper.sh)"
#
if [ -f /etc/zsh.command-not-found ]; then
    . /etc/zsh.command-not-found
fi

download-music ()
{
 # this code is mostly taken from: https://github.com/Tom60chat/Youtube-Music-downloader/blob/main/YT%20Music%20Dl.sh
 yt-dlp $1 \
  --extract-audio\
   --audio-format mp3\
    --audio-quality 0\
     --parse-metadata "playlist_index:%(track_number)s"\
      --add-metadata\
       --embed-thumbnail\
        --external-downloader=aria2c --external-downloader-args '--min-split-size=1M --max-connection-per-server=16 --max-concurrent-downloads=16 --split=16'\
         --ppa "EmbedThumbnail+ffmpeg_o:-c:v mjpeg -vf crop=\"'if(gt(ih,iw),iw,ih)':'if(gt(iw,ih),ih,iw)'\""
       # This part is taken from: https://www.reddit.com/r/youtubedl/comments/qf2uqv/fix_for_60kbs_throttled_downloads_2021oct/
}

alias back="cd $OLDPWD"

fix-discord () 
{
	sudoedit "$(file "$(which Discord)" | sed "s/.*to\s\.\.\(.*\)Discord\s*$/\1resources\/build_info.json/")"
}

backup ()
{
  cp -r "$1" "$1.backup"
  echo "Backed up \"$1\" to \"$1.backup\"!"
}

alias another-quote="aquote $HOME/Dotfiles/quotes.json"

another-quote
eval $(starship init zsh)
